{"version":3,"file":"index.iife.js","sources":["../src/PriorityQueue.ts"],"sourcesContent":["import { BinaryHeap } from '@utlime/heap';\nimport { IPriorityQueue } from './IPriorityQueue';\n\nexport class PriorityQueue<T> implements IPriorityQueue<T> {\n  private heap: BinaryHeap<{ queueItem: T; order: number }>;\n\n  private counter: number = 0;\n\n  constructor(min: boolean = false) {\n    this.heap = new BinaryHeap(({ priority: priorityA, item: itemA }, { priority: priorityB, item: itemB }) => {\n      if (priorityA != priorityB) {\n        if (min) {\n          return priorityA < priorityB;\n        }\n\n        return priorityA > priorityB;\n      }\n\n      return itemA.order < itemB.order;\n    });\n  }\n\n  dequeue(): T | undefined {\n    const item = this.heap.extract();\n\n    if (item != null) {\n      return item.queueItem;\n    }\n\n    return undefined;\n  }\n\n  enqueue(queueItem: T, priority: number) {\n    this.heap.insert({ queueItem, order: this.counter++ }, priority);\n  }\n}\n"],"names":["BinaryHeap"],"mappings":";;;QAGa,aAAa;MAKxB,YAAY,MAAe,KAAK;UAFxB,YAAO,GAAW,CAAC,CAAC;UAG1B,IAAI,CAAC,IAAI,GAAG,IAAIA,eAAU,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE;cACpG,IAAI,SAAS,IAAI,SAAS,EAAE;kBAC1B,IAAI,GAAG,EAAE;sBACP,OAAO,SAAS,GAAG,SAAS,CAAC;mBAC9B;kBAED,OAAO,SAAS,GAAG,SAAS,CAAC;eAC9B;cAED,OAAO,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;WAClC,CAAC,CAAC;OACJ;MAED,OAAO;UACL,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;UAEjC,IAAI,IAAI,IAAI,IAAI,EAAE;cAChB,OAAO,IAAI,CAAC,SAAS,CAAC;WACvB;UAED,OAAO,SAAS,CAAC;OAClB;MAED,OAAO,CAAC,SAAY,EAAE,QAAgB;UACpC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;OAClE;GACF;;;;;;;;;;"}
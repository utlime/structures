{"version":3,"file":"index.umd.js","sources":["../src/BinaryTree.ts","../src/BinaryHeap.ts","../src/MinHeap.ts","../src/MaxHeap.ts"],"sourcesContent":["export class BinaryTree<T> {\n  private readonly storage: T[] = [];\n\n  push(value: T) {\n    this.storage.push(value);\n  }\n\n  pop(): T | undefined {\n    return this.storage.pop();\n  }\n\n  swap(a: number, b: number) {\n    [this.storage[a], this.storage[b]] = [this.storage[b], this.storage[a]];\n  }\n\n  value(position: number): T | undefined {\n    return this.storage[position];\n  }\n\n  parent(position: number): number | undefined {\n    const parent = Math.floor((position - 1) / 2);\n    return this.exists(parent) ? parent : undefined;\n  }\n\n  left(position: number): number | undefined {\n    const left = 2 * position + 1;\n    return this.exists(left) ? left : undefined;\n  }\n\n  right(position: number): number | undefined {\n    const right = 2 * position + 2;\n    return this.exists(right) ? right : undefined;\n  }\n\n  root(): number | undefined {\n    return this.storage.length > 0 ? 0 : undefined;\n  }\n\n  tail(): number | undefined {\n    return this.storage.length > 0 ? this.storage.length - 1 : undefined;\n  }\n\n  exists(a: number): boolean {\n    return a >= 0 && a < this.storage.length;\n  }\n}\n","import { BinaryTree } from './BinaryTree';\nimport { IHeap } from './IHeap';\n\ntype PriorityItem<T> = Readonly<{ item: T; priority: number }>;\n\ntype isAGreaterOrEqualB<T> = (a: T, b: T) => boolean;\n\nexport class BinaryHeap<T> implements IHeap<T> {\n  private readonly storage: BinaryTree<PriorityItem<T>> = new BinaryTree();\n\n  private readonly comparator: isAGreaterOrEqualB<PriorityItem<T>>;\n\n  constructor(comparator?: isAGreaterOrEqualB<PriorityItem<T>>) {\n    this.comparator = comparator != null ? comparator : ({ priority: a }, { priority: b }) => a >= b;\n  }\n\n  extract(): T | undefined {\n    const root = this.storage.root();\n    const tail = this.storage.tail();\n\n    if (root != null && tail != null) {\n      this.storage.swap(root, tail);\n    }\n\n    const item = this.storage.pop();\n\n    let position = this.storage.root();\n    while (position != null) {\n      const left = this.storage.left(position);\n      const right = this.storage.right(position);\n      let next;\n\n      if (right != null && left != null && !this.compare(left, right)) {\n        next = right;\n      } else if (left != null) {\n        next = left;\n      }\n\n      if (next != null && !this.compare(position, next)) {\n        this.storage.swap(position, next);\n        position = next;\n      } else {\n        position = undefined;\n      }\n    }\n\n    return item != null ? item.item : undefined;\n  }\n\n  insert(item: T, priority: number): void {\n    this.storage.push({ item, priority });\n\n    let position = <number>this.storage.tail();\n    let parent = this.storage.parent(position);\n\n    while (parent != null && !this.compare(parent, position)) {\n      this.storage.swap(position, parent);\n      position = parent;\n      parent = this.storage.parent(position);\n    }\n  }\n\n  private compare(a: number, b: number) {\n    return this.comparator(<PriorityItem<T>>this.storage.value(a), <PriorityItem<T>>this.storage.value(b));\n  }\n}\n","import { BinaryHeap } from './BinaryHeap';\nimport { IHeap } from './IHeap';\n\nexport class MinHeap<T> implements IHeap<T> {\n  private readonly heap: BinaryHeap<T>;\n\n  constructor() {\n    this.heap = new BinaryHeap(({ priority: a }, { priority: b }) => a <= b);\n  }\n\n  insert(item: T, priority: number) {\n    this.heap.insert(item, priority);\n  }\n\n  extract(): T | undefined {\n    return this.heap.extract();\n  }\n}\n","import { BinaryHeap } from './BinaryHeap';\nimport { IHeap } from './IHeap';\n\nexport class MaxHeap<T> implements IHeap<T> {\n  private readonly heap: BinaryHeap<T>;\n\n  constructor() {\n    this.heap = new BinaryHeap();\n  }\n\n  insert(item: T, priority: number) {\n    this.heap.insert(item, priority);\n  }\n\n  extract(): T | undefined {\n    return this.heap.extract();\n  }\n}\n"],"names":[],"mappings":"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"}
{"version":3,"file":"index.iife.min.js","sources":["../src/AsyncConcurrentLimit.ts","../src/AsyncConcurrentStack.ts","../src/AsyncConcurrentQueue.ts"],"sourcesContent":["import { IAsyncConcurrentLimit, Task } from './IAsyncConcurrentLimit';\n\nexport abstract class AsyncConcurrentLimit<O> implements IAsyncConcurrentLimit<O> {\n  private readonly limit: number;\n  private active: Set<ReturnType<Task<any>>>;\n  private process: ReturnType<Task<any>> | null;\n\n  protected constructor(limit: number) {\n    this.limit = limit;\n    this.active = new Set();\n    this.process = null;\n  }\n\n  protected abstract push<T>(task: Task<T>, options?: O): void;\n  protected abstract pull(): Task<any> | undefined;\n\n  add<T>(task: Task<T>, options?: O): ReturnType<Task<T>> {\n    const result = this.schedule(task, options);\n\n    this.runProcess();\n\n    return result;\n  }\n\n  private runTask<T>(task: Task<T>) {\n    const promise = task();\n\n    this.active.add(promise);\n\n    promise.finally(() => this.active.delete(promise));\n\n    return promise;\n  }\n\n  private runTasks() {\n    let nextTask;\n    while (this.active.size < this.limit && (nextTask = this.pull()) != null) {\n      this.runTask(nextTask);\n    }\n  }\n\n  private schedule<T>(task: Task<T>, options?: O): ReturnType<Task<T>> {\n    return new Promise(resolve => {\n      const wrapped: Task<T> = () => {\n        const promise = task();\n\n        resolve(promise);\n\n        return promise;\n      };\n\n      this.push(wrapped, options);\n    });\n  }\n\n  private runProcess() {\n    if (this.process == null) {\n      const loop = (): Promise<any> => {\n        this.runTasks();\n\n        if (this.active.size === 0) {\n          return Promise.resolve();\n        }\n\n        return Promise.race(this.active).then(loop, loop);\n      };\n\n      this.process = Promise.resolve()\n        .then(loop)\n        .finally(() => {\n          this.process = null;\n        });\n    } else {\n      Promise.resolve().then(() => this.runTasks());\n    }\n  }\n}\n","import { Stack } from '@utlime/stack';\nimport { AsyncConcurrentLimit } from './AsyncConcurrentLimit';\nimport { Task } from './IAsyncConcurrentLimit';\n\nexport class AsyncConcurrentStack extends AsyncConcurrentLimit<undefined> {\n  protected stack: Stack<Task<any>>;\n\n  constructor(limit: number) {\n    super(limit);\n\n    this.stack = new Stack();\n  }\n\n  protected push<T>(task: Task<T>) {\n    this.stack.push(task);\n  }\n\n  protected pull(): Task<any> | undefined {\n    return this.stack.pop();\n  }\n}\n","import { Queue } from '@utlime/queue';\nimport { AsyncConcurrentLimit } from './AsyncConcurrentLimit';\nimport { Task } from './IAsyncConcurrentLimit';\n\nexport class AsyncConcurrentQueue extends AsyncConcurrentLimit<undefined> {\n  protected queue: Queue<Task<any>>;\n\n  constructor(limit: number) {\n    super(limit);\n\n    this.queue = new Queue();\n  }\n  protected push<T>(task: Task<T>) {\n    this.queue.enqueue(task);\n  }\n\n  protected pull(): Task<any> | undefined {\n    return this.queue.dequeue();\n  }\n}\n"],"names":["AsyncConcurrentLimit","[object Object]","limit","this","active","Set","process","task","options","result","schedule","runProcess","promise","add","finally","delete","nextTask","size","pull","runTask","Promise","resolve","push","loop","runTasks","race","then","super","stack","Stack","pop","queue","Queue","enqueue","dequeue"],"mappings":"kEAEsBA,EAKpBC,YAAsBC,GACpBC,KAAKD,MAAQA,EACbC,KAAKC,OAAS,IAAIC,IAClBF,KAAKG,QAAU,KAMjBL,IAAOM,EAAeC,GACpB,MAAMC,EAASN,KAAKO,SAASH,EAAMC,GAInC,OAFAL,KAAKQ,aAEEF,EAGDR,QAAWM,GACjB,MAAMK,EAAUL,IAMhB,OAJAJ,KAAKC,OAAOS,IAAID,GAEhBA,EAAQE,QAAQ,IAAMX,KAAKC,OAAOW,OAAOH,IAElCA,EAGDX,WACN,IAAIe,EACJ,KAAOb,KAAKC,OAAOa,KAAOd,KAAKD,OAAqC,OAA3Bc,EAAWb,KAAKe,SACvDf,KAAKgB,QAAQH,GAITf,SAAYM,EAAeC,GACjC,OAAO,IAAIY,QAAQC,IASjBlB,KAAKmB,KARoB,KACvB,MAAMV,EAAUL,IAIhB,OAFAc,EAAQT,GAEDA,GAGUJ,KAIfP,aACN,GAAoB,MAAhBE,KAAKG,QAAiB,CACxB,MAAMiB,EAAO,KACXpB,KAAKqB,WAEoB,IAArBrB,KAAKC,OAAOa,KACPG,QAAQC,UAGVD,QAAQK,KAAKtB,KAAKC,QAAQsB,KAAKH,EAAMA,IAG9CpB,KAAKG,QAAUc,QAAQC,UACpBK,KAAKH,GACLT,QAAQ,KACPX,KAAKG,QAAU,YAGnBc,QAAQC,UAAUK,KAAK,IAAMvB,KAAKqB,yDCrEExB,EAGxCC,YAAYC,GACVyB,MAAMzB,GAENC,KAAKyB,MAAQ,IAAIC,QAGT5B,KAAQM,GAChBJ,KAAKyB,MAAMN,KAAKf,GAGRN,OACR,OAAOE,KAAKyB,MAAME,6CCdoB9B,EAGxCC,YAAYC,GACVyB,MAAMzB,GAENC,KAAK4B,MAAQ,IAAIC,QAET/B,KAAQM,GAChBJ,KAAK4B,MAAME,QAAQ1B,GAGXN,OACR,OAAOE,KAAK4B,MAAMG"}
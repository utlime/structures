{"version":3,"file":"index.js","sources":["../src/AsyncConcurrentLimit.ts","../src/AsyncConcurrentStack.ts","../src/AsyncConcurrentQueue.ts"],"sourcesContent":["import { IAsyncConcurrentLimit, Task } from './IAsyncConcurrentLimit';\n\nexport abstract class AsyncConcurrentLimit<O> implements IAsyncConcurrentLimit<O> {\n  private readonly limit: number;\n  private active: Set<ReturnType<Task<any>>>;\n  private process: ReturnType<Task<any>> | null;\n\n  protected constructor(limit: number) {\n    this.limit = limit;\n    this.active = new Set();\n    this.process = null;\n  }\n\n  protected abstract push<T>(task: Task<T>, options?: O): void;\n  protected abstract pull(): Task<any> | undefined;\n\n  add<T>(task: Task<T>, options?: O): ReturnType<Task<T>> {\n    const result = this.schedule(task, options);\n\n    this.runProcess();\n\n    return result;\n  }\n\n  private runTask<T>(task: Task<T>) {\n    const promise = task();\n\n    this.active.add(promise);\n\n    promise.finally(() => this.active.delete(promise));\n\n    return promise;\n  }\n\n  private runTasks() {\n    let nextTask;\n    while (this.active.size < this.limit && (nextTask = this.pull()) != null) {\n      this.runTask(nextTask);\n    }\n  }\n\n  private schedule<T>(task: Task<T>, options?: O): ReturnType<Task<T>> {\n    return new Promise(resolve => {\n      const wrapped: Task<T> = () => {\n        const promise = task();\n\n        resolve(promise);\n\n        return promise;\n      };\n\n      this.push(wrapped, options);\n    });\n  }\n\n  private runProcess() {\n    if (this.process == null) {\n      const loop = (): Promise<any> => {\n        this.runTasks();\n\n        if (this.active.size === 0) {\n          return Promise.resolve();\n        }\n\n        return Promise.race(this.active).then(loop, loop);\n      };\n\n      this.process = Promise.resolve()\n        .then(loop)\n        .finally(() => {\n          this.process = null;\n        });\n    } else {\n      Promise.resolve().then(() => this.runTasks());\n    }\n  }\n}\n","import { Stack } from '@utlime/stack';\nimport { AsyncConcurrentLimit } from './AsyncConcurrentLimit';\nimport { Task } from './IAsyncConcurrentLimit';\n\nexport class AsyncConcurrentStack extends AsyncConcurrentLimit<undefined> {\n  protected stack: Stack<Task<any>>;\n\n  constructor(limit: number) {\n    super(limit);\n\n    this.stack = new Stack();\n  }\n\n  protected push<T>(task: Task<T>) {\n    this.stack.push(task);\n  }\n\n  protected pull(): Task<any> | undefined {\n    return this.stack.pop();\n  }\n}\n","import { Queue } from '@utlime/queue';\nimport { AsyncConcurrentLimit } from './AsyncConcurrentLimit';\nimport { Task } from './IAsyncConcurrentLimit';\n\nexport class AsyncConcurrentQueue extends AsyncConcurrentLimit<undefined> {\n  protected queue: Queue<Task<any>>;\n\n  constructor(limit: number) {\n    super(limit);\n\n    this.queue = new Queue();\n  }\n  protected push<T>(task: Task<T>) {\n    this.queue.enqueue(task);\n  }\n\n  protected pull(): Task<any> | undefined {\n    return this.queue.dequeue();\n  }\n}\n"],"names":[],"mappings":"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"}
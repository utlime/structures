{"version":3,"file":"index.iife.js","sources":["../src/AsyncConcurrentLimit.ts","../src/AsyncConcurrentStack.ts","../src/AsyncConcurrentQueue.ts"],"sourcesContent":["import { IAsyncConcurrentLimit, Task } from './IAsyncConcurrentLimit';\n\nexport abstract class AsyncConcurrentLimit<O> implements IAsyncConcurrentLimit<O> {\n  private readonly limit: number;\n  private active: Set<ReturnType<Task<any>>>;\n  private process: ReturnType<Task<any>> | null;\n\n  protected constructor(limit: number) {\n    this.limit = limit;\n    this.active = new Set();\n    this.process = null;\n  }\n\n  protected abstract push<T>(task: Task<T>, options?: O): void;\n  protected abstract pull(): Task<any> | undefined;\n\n  add<T>(task: Task<T>, options?: O): ReturnType<Task<T>> {\n    const result = this.schedule(task, options);\n\n    this.runProcess();\n\n    return result;\n  }\n\n  private runTask<T>(task: Task<T>) {\n    const promise = task();\n\n    this.active.add(promise);\n\n    promise.finally(() => this.active.delete(promise));\n\n    return promise;\n  }\n\n  private runTasks() {\n    let nextTask;\n    while (this.active.size < this.limit && (nextTask = this.pull()) != null) {\n      this.runTask(nextTask);\n    }\n  }\n\n  private schedule<T>(task: Task<T>, options?: O): ReturnType<Task<T>> {\n    return new Promise(resolve => {\n      const wrapped: Task<T> = () => {\n        const promise = task();\n\n        resolve(promise);\n\n        return promise;\n      };\n\n      this.push(wrapped, options);\n    });\n  }\n\n  private runProcess() {\n    if (this.process == null) {\n      const loop = (): Promise<any> => {\n        this.runTasks();\n\n        if (this.active.size === 0) {\n          return Promise.resolve();\n        }\n\n        return Promise.race(this.active).then(loop, loop);\n      };\n\n      this.process = Promise.resolve()\n        .then(loop)\n        .finally(() => {\n          this.process = null;\n        });\n    } else {\n      Promise.resolve().then(() => this.runTasks());\n    }\n  }\n}\n","import { Stack } from '@utlime/stack';\nimport { AsyncConcurrentLimit } from './AsyncConcurrentLimit';\nimport { Task } from './IAsyncConcurrentLimit';\n\nexport class AsyncConcurrentStack extends AsyncConcurrentLimit<undefined> {\n  protected stack: Stack<Task<any>>;\n\n  constructor(limit: number) {\n    super(limit);\n\n    this.stack = new Stack();\n  }\n\n  protected push<T>(task: Task<T>) {\n    this.stack.push(task);\n  }\n\n  protected pull(): Task<any> | undefined {\n    return this.stack.pop();\n  }\n}\n","import { Queue } from '@utlime/queue';\nimport { AsyncConcurrentLimit } from './AsyncConcurrentLimit';\nimport { Task } from './IAsyncConcurrentLimit';\n\nexport class AsyncConcurrentQueue extends AsyncConcurrentLimit<undefined> {\n  protected queue: Queue<Task<any>>;\n\n  constructor(limit: number) {\n    super(limit);\n\n    this.queue = new Queue();\n  }\n  protected push<T>(task: Task<T>) {\n    this.queue.enqueue(task);\n  }\n\n  protected pull(): Task<any> | undefined {\n    return this.queue.dequeue();\n  }\n}\n"],"names":["Stack","Queue"],"mappings":";;;QAEsB,oBAAoB;MAKxC,YAAsB,KAAa;UACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;UACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;OACrB;MAKD,GAAG,CAAI,IAAa,EAAE,OAAW;UAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;UAE5C,IAAI,CAAC,UAAU,EAAE,CAAC;UAElB,OAAO,MAAM,CAAC;OACf;MAEO,OAAO,CAAI,IAAa;UAC9B,MAAM,OAAO,GAAG,IAAI,EAAE,CAAC;UAEvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;UAEzB,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;UAEnD,OAAO,OAAO,CAAC;OAChB;MAEO,QAAQ;UACd,IAAI,QAAQ,CAAC;UACb,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;cACxE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;WACxB;OACF;MAEO,QAAQ,CAAI,IAAa,EAAE,OAAW;UAC5C,OAAO,IAAI,OAAO,CAAC,OAAO;cACxB,MAAM,OAAO,GAAY;kBACvB,MAAM,OAAO,GAAG,IAAI,EAAE,CAAC;kBAEvB,OAAO,CAAC,OAAO,CAAC,CAAC;kBAEjB,OAAO,OAAO,CAAC;eAChB,CAAC;cAEF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;WAC7B,CAAC,CAAC;OACJ;MAEO,UAAU;UAChB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;cACxB,MAAM,IAAI,GAAG;kBACX,IAAI,CAAC,QAAQ,EAAE,CAAC;kBAEhB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;sBAC1B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;mBAC1B;kBAED,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;eACnD,CAAC;cAEF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE;mBAC7B,IAAI,CAAC,IAAI,CAAC;mBACV,OAAO,CAAC;kBACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;eACrB,CAAC,CAAC;WACN;eAAM;cACL,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;WAC/C;OACF;GACF;;QCxEY,oBAAqB,SAAQ,oBAA+B;MAGvE,YAAY,KAAa;UACvB,KAAK,CAAC,KAAK,CAAC,CAAC;UAEb,IAAI,CAAC,KAAK,GAAG,IAAIA,WAAK,EAAE,CAAC;OAC1B;MAES,IAAI,CAAI,IAAa;UAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACvB;MAES,IAAI;UACZ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;OACzB;GACF;;QChBY,oBAAqB,SAAQ,oBAA+B;MAGvE,YAAY,KAAa;UACvB,KAAK,CAAC,KAAK,CAAC,CAAC;UAEb,IAAI,CAAC,KAAK,GAAG,IAAIC,WAAK,EAAE,CAAC;OAC1B;MACS,IAAI,CAAI,IAAa;UAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;OAC1B;MAES,IAAI;UACZ,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;OAC7B;GACF;;;;;;;;;;;"}